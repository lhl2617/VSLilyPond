{
	"name": "VSLilyPond",
	"displayName": "VSLilyPond",
	"publisher": "lhl2617",
	"description": "LilyPond syntax highlighting and helper features",
	"version": "0.0.1",
	"engines": {
		"vscode": "^1.44.0"
	},
	"categories": [
		"Languages"
	],
	"activationEvents": [
		"onCommand:extension.playMIDI",
		"onCommand:extension.stopMIDI",
		"onCommand:extension.pauseMIDI",
		"onCommand:extension.resumeMIDI",
		"onCommand:extension.resetMIDI",
		"onCommand:extension.setOutputMIDIDevice",
		"onCommand:extension.startMIDIInput",
		"onCommand:extension.stopMIDIInput",
		"onCommand:extension.setInputMIDIDevice",
		"onCommand:extension.compile",
		"onLanguage:lilypond"
	],
	"main": "./out/extension.js",
	"contributes": {
		"languages": [
			{
				"id": "lilypond",
				"aliases": [
					"LilyPond",
					"lilypond"
				],
				"extensions": [
					".ily",
					".ly"
				],
				"configuration": "./language-configuration.json"
			}
		],
		"grammars": [
			{
				"language": "lilypond",
				"scopeName": "source.lilypond",
				"path": "./syntaxes/lilypond.tmLanguage"
			}
		],
		"commands": [
			{
				"command": "extension.playMIDI",
				"title": "VSLilyPond: MIDI Playback: Play (from start)"
			},
			{
				"command": "extension.stopMIDI",
				"title": "VSLilyPond: MIDI Playback: Stop"
			},
			{
				"command": "extension.pauseMIDI",
				"title": "VSLilyPond: MIDI Playback: Pause"
			},
			{
				"command": "extension.resumeMIDI",
				"title": "VSLilyPond: MIDI Playback: Resume"
			},
			{
				"command": "extension.resetMIDI",
				"title": "VSLilyPond: MIDI Playback: Reset"
			},
			{
				"command": "extension.setOutputMIDIDevice",
				"title": "VSLilyPond: MIDI Playback: Set output device"
			},
			{
				"command": "extension.startMIDIInput",
				"title": "VSLilyPond: MIDI Input: Start MIDI input"
			},
			{
				"command": "extension.stopMIDIInput",
				"title": "VSLilyPond: MIDI Input: Stop MIDI input"
			},
			{
				"command": "extension.setInputMIDIDevice",
				"title": "VSLilyPond: MIDI Input: Set input device"
			},
			{
				"command": "extension.compile",
				"title": "VSLilyPond: Compile"
			}
		],
		"configuration": {
			"title": "VSLilyPond",
			"properties": {
				"vslilypond.intellisense.enabled": {
					"type": "boolean",
					"default": true,
					"description": "Displays errors with red underlines as you type. Disable to improve performance. Reload required."
				},
				"vslilypond.intellisense.additionalCommandLineArguments": {
					"type": "string",
					"default": "",
					"description": "Additional command line arguments supplied to `lilypond` upon compiling for intellisense. Note that `-s` (silent mode) is predefined. If required, please also supply necessary arguments compilation additional command line arguments."
				},
				"vslilypond.compilation.outputFormat": {
					"type": "string",
					"default": "pdf",
					"enum": [
						"pdf",
						"png",
						"ps"
					],
					"enumDescriptions": [
						"Generate PDF files",
						"Generate PNG files",
						"Generate PostScript files"
					],
					"description": "Output format."
				},
				"vslilypond.compilation.compileOnSave": {
					"type": "boolean",
					"default": true,
					"description": "Compiles file upon saving. Disable to improve performance. Reload required."
				},
				"vslilypond.compilation.additionalCommandLineArguments": {
					"type": "string",
					"default": "",
					"description": "Additional command line arguments supplied to `lilypond` upon compilation. Note that `-s` (silent mode) is predefined. If you use intellisense, please also supply necessary arguments to the corresponding additional command line arguments."
				},
				"vslilypond.midiPlayback.output": {
					"type": "string",
					"default": "",
					"description": "MIDI Device used for output. If none specified, first valid device is used. You can use the command `VSLilyPond: MIDI Playback: Set output device` to select a device from a list."
				},
				"vslilypond.midiInput.input": {
					"type": "string",
					"default": "",
					"description": "MIDI Device used for input. If none specified, first valid device is used. You can use the command `VSLilyPond: MIDI Input: Set output device` to select a device from a list."
				},
				"vslilypond.midiInput.chordMode": {
					"type": "boolean",
					"default": false,
					"description": "Chord mode in music entry. Registers notes that are pressed and held together as a chord instead of sequential notes."
				},
				"vslilypond.midiInput.relativeMode": {
					"type": "boolean",
					"default": false,
					"description": "Relative mode (as opposed to absolute mode)."
				},
				"vslilypond.midiInput.accidentals": {
					"type": "string",
					"default": "sharps",
					"enum": [
						"sharps",
						"flats"
					],
					"enumDescriptions": [
						"Treat accidentals as sharps.",
						"Treat accidentals as flats."
					],
					"description": "Set accidentals as sharp/flat."
				}
			}
		}
	},
	"scripts": {
		"vscode:prepublish": "npm run compile",
		"compile": "tsc -p ./",
		"lint": "eslint src --ext ts",
		"watch": "tsc -watch -p ./",
		"pretest": "npm run compile && npm run lint",
		"test": "node ./out/test/runTest.js"
	},
	"devDependencies": {
		"@types/glob": "^7.1.1",
		"@types/lodash": "^4.14.150",
		"@types/mocha": "^7.0.1",
		"@types/node": "^12.12.36",
		"@types/vscode": "^1.44.0",
		"@typescript-eslint/eslint-plugin": "^2.29.0",
		"@typescript-eslint/parser": "^2.29.0",
		"eslint": "^6.8.0",
		"glob": "^7.1.6",
		"mocha": "^7.0.1",
		"typescript": "^3.7.5",
		"vscode-test": "^1.3.0"
	},
	"dependencies": {
		"jzz-midi-smf": "^1.3.3",
		"lodash": "^4.17.15"
	}
}
